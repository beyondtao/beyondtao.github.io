<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Aps on Scott Tao</title>
        <link>https://blog.iostao.com/tags/aps/</link>
        <description>Recent content in Aps on Scott Tao</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 11 Jun 2016 10:46:18 +0000</lastBuildDate><atom:link href="https://blog.iostao.com/tags/aps/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>APS过审了，开心</title>
        <link>https://blog.iostao.com/2016/06/aps-pass/</link>
        <pubDate>Sat, 11 Jun 2016 10:46:18 +0000</pubDate>
        
        <guid>https://blog.iostao.com/2016/06/aps-pass/</guid>
        <description>&lt;p&gt;5月30号参加的APS审核，然后大概第三天查了一下成绩，很高兴通过了。周末趁着有时间，在这里简单写一下关于APS的一些心得吧。&lt;/p&gt;
&lt;p&gt;我是元旦的时候，寄出去的审核材料，到审核一共差不多是半年整。期间因为工作的原因，也就是下班或者周末的时候，简单的整理了一下各科的资料，整理资料，写翻译。但是效率并不高。上个月接到审核电话之后，就有点慌了，因为只有整理了资料，并没有记住。所以就开始准备认真学习了。周末的时候，先去的中国传媒大学教学楼学习，后来去的北京第二外国语学院，发现二外学习还是不错的，去餐厅也近一些。&lt;/p&gt;
&lt;p&gt;期间各种学习，然后审核的前一个周末，我朋友说帮我模拟面试一下，结果我发现虽然东西我都记住了，但是张口说不出来，因为平时看东西都是小声的说并记忆，导致正常说的时候，说不出来，然后最后三天时间就重点练习口语。张开口，自问自答。&lt;/p&gt;
&lt;p&gt;我是周二审核，周一那天请了一天假，在家练习了一天。我住的地方到亮马桥那边有点儿远，所以下午去那边附近酒店，提前入住，这样第二天可以省很多时间。&lt;/p&gt;
&lt;p&gt;到了那边报道之后，前台会让你去等候室等待，好多人在里面，如果自信的话，可以和旁边的和小伙伴聊聊天。我是比较紧张，就自己坐在那里，然后等了几个人之后，就看到一个头发有些红色，然后像熊猫的那位过来叫人，念的我的名字，然后我走过去的时候，就听到好多人说红灭啊。&lt;/p&gt;
&lt;p&gt;主审核官是红灭，自我感觉人还是不错的。过去的时候把包放到了柜子里，然后口袋里也不要放什么东西，当时我口袋里放了张房卡。她看到我口袋有东西，就问我是什么，我刚开始没听出来，她就脾气暴躁的又问了两次，然后我反应过来，掏出来给她看了一下，她就让我去笔试的那个小房间里了。&lt;/p&gt;
&lt;p&gt;小房间里有笔，词典这些，当然不要想着中英、中德词典了。而且时间有限，尽量提前背熟词汇，翻词典挺浪费时间的。&lt;/p&gt;
&lt;p&gt;我的笔试题是两道大题，不清楚其他人的题是什么样的题型，因为保密问题，不能在这里写出来了。不过我第二个有几个单词想不起来了，因为有几个点，那几个单词的影响，这道题只回答了一半。&lt;/p&gt;
&lt;p&gt;到时间了，红灭把我领导对面的办公室里，还有一个副审核官，进去之后打了招呼入座。然后红灭可能脾气暴躁还是什么影响吧，坐下之后，又确认了一下我的名字。我以为接下来会是自我介绍什么的，结果都没有，直接就是问了专业知识。虽然我工作一年了，但是并没有问毕业论文的东西。我是计算机专业的，中间有几门课是实践课，问到了之后，我告诉她是实践内容，但是有一些词汇没准备好，回答的并不是很好。另外就是我英语没有过四级，所以语言也不好。&lt;/p&gt;
&lt;p&gt;后面就是问了一下我为什么想去德国，想去什么学校。简单聊了一下，红灭送我出来的时候，对我说了一句你的语言很差，我以为挂了呢，不过幸运的是通过了。&lt;/p&gt;
&lt;p&gt;我是毕业工作了之后审核的APS，网上很多说的毕业了之后，很多是问你自我介绍
为什么想出国学习、毕业论文这些，专业课知识问的少，这种话不要相信，我是自我介绍、毕业论文都没有问，基本都是专业知识。所以准备一定要充分。&lt;/p&gt;</description>
        </item>
        <item>
        <title>OSI、TCP/IP</title>
        <link>https://blog.iostao.com/2016/03/aps-osi_tcp-ip/</link>
        <pubDate>Wed, 23 Mar 2016 07:17:48 +0000</pubDate>
        
        <guid>https://blog.iostao.com/2016/03/aps-osi_tcp-ip/</guid>
        <description>&lt;p&gt;OSI/RM (Open Systems Interconnection Reference Model) 开发系统互连基本参考模型&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;应用层 Application layer
表示层 Presentation layer
会话层 Session layer
传输层 Transport layer
网络层 Network layer
数据链路层 Data link layer
物理层 Physical layer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;用图说话&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.iostao.com/2016/03/aps-osi_tcp-ip/ost-tcp-ip.png&#34;
	width=&#34;500&#34;
	height=&#34;270&#34;
	srcset=&#34;https://blog.iostao.com/2016/03/aps-osi_tcp-ip/ost-tcp-ip_hu8463112965702887486.png 480w, https://blog.iostao.com/2016/03/aps-osi_tcp-ip/ost-tcp-ip_hu18198486914454477485.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;用图说话&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;185&#34;
		data-flex-basis=&#34;444px&#34;
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Computer English Vocabulary</title>
        <link>https://blog.iostao.com/2016/03/aps-computervocabulary/</link>
        <pubDate>Tue, 22 Mar 2016 22:15:01 +0000</pubDate>
        
        <guid>https://blog.iostao.com/2016/03/aps-computervocabulary/</guid>
        <description>&lt;h2 id=&#34;计算机专业词汇&#34;&gt;计算机专业词汇
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;reuse 重用，复用
recall	
callback 回调
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;override 重写
recursion 递归
encapsulation 封装
inheritance	继承
interface 接口
delegationg 委托
entity 实体
schema n.模式，概要，图表
scheme	n.方案
relational schema 关系模式
design 设计
optimize vt.使最优化，使尽可能有效
redundancy 冗余
Redundant adj.冗余	的
abnormal	异常
interface 接口
host	主机
Atomic  原子的，原子能的；微粒子的
relation model 关系模式
durable	持久的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;two to the fourth power 2的4次方
message	报文
frame	框架，帧
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;sql&#34;&gt;SQL
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Data	数据
Data Base	数据库
Data Base Management System (DBMS)	数据库管理系统
Data Definition Language (DDL) 数据定义语言
Data Manipulation Language (DML) 数据库操作语言 （增删查改）
Data Base System (DBS) 数据库系统
Data Base Administrator (DBA) 数据库管理员
Schematic diagram of database system	数据库系统示意图
Security	安全性
Integrity	完整性
Concurrency	并发
Recovery	恢复
Entity-Relationship Approach (E-R)	实体-联系方法
Entity	 	实体
Attribute	属性
Relationship	联系
Relation	关系
Tuple		元组
Attribute and Attribute Value	属性和属性值
Domain		域
Relation Mode	关系模式
Key			键
Candidate Key	候选键
Primary Key	主键
Non Primary Key	非主属性/非键属性
Foreign Key	外键

Normal Form	范式
Boyce-Codd Normal Form (BCNF) Boyce-Codd范式
Index	索引
Cluster Index	聚集索引
Non-cluster Index	非聚集索引
algorithms	运算法则
add / plus	加
minus		减
multiplied	乘
divide		除
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;compiler-design-principles&#34;&gt;compiler design principles
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;machine language	机器语言
object program		目标程序
object code			目标代码
process				进程
thread				线程
queue				队列
synchrony			同步
asynchronism		异步
superclass			父类
subclass			子类
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>Encapsulation, Inheritance, Polymorphism, Delegation</title>
        <link>https://blog.iostao.com/2016/03/aps-encapsulation-inheritance-polymorphism-delegation/</link>
        <pubDate>Fri, 18 Mar 2016 22:15:01 +0000</pubDate>
        
        <guid>https://blog.iostao.com/2016/03/aps-encapsulation-inheritance-polymorphism-delegation/</guid>
        <description>&lt;h4 id=&#34;encapsulation-封装&#34;&gt;Encapsulation 封装
&lt;/h4&gt;&lt;p&gt;Encapsulation is hide the internal implementation, and stabilize the external interface. It can hide the implementation details and make the code modular.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eg.&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public int max(int a, int b) {
	return a &amp;gt; b ? a : b;
}

int a = max(1, 5);
int b = max(10, 15);
int max = max(a, b);
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;inheritance&#34;&gt;Inheritance
&lt;/h4&gt;&lt;p&gt;Inheritance can expand the code modular, it used for resue code.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eg.&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class Person {
	String ID;
	String Name;
	Boolean Gender;
	String Birthday;
}

public class Student extends Person {
	String SID;
	String major;
	String Department;
}

The Student inherit attributes from the SuperClass -- PersonClass.
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;polymorphism&#34;&gt;Polymorphism
&lt;/h4&gt;&lt;p&gt;1、overload&lt;/p&gt;
&lt;p&gt;The functions have the same method name, but they have different parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eg.&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public int max(int a, int b) {
	return a &amp;gt; b ? a : b;
}

public int max(int a, int b, int c) {
	int max = a &amp;gt; b ? a : b;
	return = max &amp;gt; c ? max : c;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2、
It just happened in the case of inheritance.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eg.&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class Person {
	String ID;
	String Name;
	Boolean Gender;
	String Birthday;
	
	public void introduction() {
		System.out.println(&amp;quot;My name is &amp;quot; + Name &amp;quot;, my Birthday is &amp;quot; + Birthday + &amp;quot;.&amp;quot;);
	}
}

public class Student extends Person {
	String SID;
	String major;
	String Department;
	
	//override the function
	public void introduction() {
		System.out.println(&amp;quot;My name is &amp;quot; + Name + &amp;quot;.&amp;quot;);
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;delegation&#34;&gt;Delegation
&lt;/h4&gt;&lt;p&gt;The delegation has two functions: one is transmit &lt;code&gt;values&lt;/code&gt;, and one is transmit the &lt;code&gt;event&lt;/code&gt;.
It can reduce the complex of the code.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eg.&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class A {
	B b = new B();

}

public class B {
	//B want to transmit a value to A.
	//But B can&#39;t communicate with A by directory.
	//so here use the delegation to help transmit value.
}
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>APS-UML</title>
        <link>https://blog.iostao.com/2016/03/aps-uml/</link>
        <pubDate>Tue, 15 Mar 2016 17:46:18 +0000</pubDate>
        
        <guid>https://blog.iostao.com/2016/03/aps-uml/</guid>
        <description>&lt;p&gt;统一建模语言&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;模型种类&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;十种图形&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;建模机制&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;用例模型&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;用例图&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;静态建模&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;静态模型&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;类图、对象图、包图&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;静态建模&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;行为模型&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;状态图、活动图&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;动态建模&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;交互模型&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;顺序图、协作图&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;动态建模&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;实现模型&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;构件图、配置图&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;静态建模&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        <item>
        <title>APS-SQL2005</title>
        <link>https://blog.iostao.com/2016/03/aps-sql2005/</link>
        <pubDate>Mon, 14 Mar 2016 21:36:38 +0000</pubDate>
        
        <guid>https://blog.iostao.com/2016/03/aps-sql2005/</guid>
        <description>&lt;h4 id=&#34;what-is-the-normal-form&#34;&gt;What is the Normal Form?
&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Normal Form is a set that with a particular level. （范式是符合某一种级别的关系模式的集合。）
Create database must follow certain rules. In the relational database, this rule is the Normal Form.
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;what-is-the-normal-form-used-to-do--what-is-the-role-of-normal-form&#34;&gt;What is the Normal Form used to do? / What is the role of Normal Form?
&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;Database that meet these Normal Form are concise and clear stuctured. At the same time, there are no exceptions when insert, delete and update.

Generally, the Relationship is divided into 5 Normal Form.
1NF, 2NF, 3NF, Boyce-Codd NF, 4NF, 5NF.

In generally, the database only to meet the 3NF.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;1nf&#34;&gt;1NF
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;In any relational database, the 1NF is the basic requirement.
If the database that does not meet the 1NF, it isn&#39;t a relational database.
The 1NF is a non repeating column.
* There must have primary key.
* Primary key cannot be empty.
* The Primary Key can&#39;t be repeated
* the column can&#39;t be divided.
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;StudentNo&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Name&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Sex&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Email&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Phone&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;001&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;LaoTao&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Mail&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:laotao@m.com&#34; &gt;laotao@m.com&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;18866688688&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;2nf&#34;&gt;2NF
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;Meeting the 2NF must meeting the 1NF. 
Each non key attribute is not part dependent on the Primary Key attribute.
So the main task of the 2NF is to meet the 1NF, and eliminate some dependence of the function.
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;StudentNo&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Name&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Sex&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Email&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Phone&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;ClassNo&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;classAddress&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;001&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;LaoTao&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Mail&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:lt@m.cn&#34; &gt;lt@m.cn&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;18866688688&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1003&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;67#A205&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;This table is fully satisfied with the 1NF. 
The primary key is consisting of the &amp;quot;StudentNo&amp;quot; and &amp;quot;ClassNO&amp;quot;.
But the &amp;quot;ClassAddress&amp;quot; depends on the key(ClassNo -&amp;gt; ClassAddress), so it must be divided into two tables.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Table 1&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;StudentNo&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Name&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Sex&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Email&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Phone&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;ClassNo&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;001&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;LaoTao&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Mail&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:lt@m.cn&#34; &gt;lt@m.cn&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;18866688688&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1003&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Table 2&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;ClassNO&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;ClassAddress&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1003&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;67#205&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;3nf&#34;&gt;3NF
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;如果关系模型R是第二范式， 且没有一个非键属性传递依赖于键，则称R是3NF.
The 3NF requires a database table does not contain the non primary key information that has benn included in other tables.
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;StudentNo&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Name&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Sex&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Email&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;bounsLevel&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;bouns&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;001&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;LaoTao&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Mail&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:lt@m.cn&#34; &gt;lt@m.cn&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Good&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;£1000&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;This table is fully satisfied with the 2NF.But boundsLevel and bounds has a transitive dependency(传递依赖).
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;StudentNo&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Name&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Sex&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;Email&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;boundsNo&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;001&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;LaoTao&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Mail&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:lt@m.cn&#34; &gt;lt@m.cn&lt;/a&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;01&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;boundsNo&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;bounsLevel&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;bouns&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;01&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;Good&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;£1000&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;I&#39;d love using the boundsNo as the Primary Key,
There are two reasons:
 * 1)don&#39;t use the characters as Primary Key.
 * 2)Generally, use the unrelated key in preference as the primary Key.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;bcnf&#34;&gt;BCNF
&lt;/h3&gt;&lt;p&gt;Boyce-Codd Normal Formal&lt;/p&gt;
&lt;h3 id=&#34;三层模式模型&#34;&gt;三层模式模型
&lt;/h3&gt;&lt;h3 id=&#34;e-r图&#34;&gt;E-R图
&lt;/h3&gt;</description>
        </item>
        <item>
        <title>APS-Network</title>
        <link>https://blog.iostao.com/2016/03/aps-network/</link>
        <pubDate>Sun, 13 Mar 2016 22:15:01 +0000</pubDate>
        
        <guid>https://blog.iostao.com/2016/03/aps-network/</guid>
        <description>&lt;p&gt;(分层，各层作用，协议)&lt;/p&gt;
&lt;h3 id=&#34;whats-the-purpose-of-this-course&#34;&gt;What&amp;rsquo;s the purpose of this course?
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;- basic knowledge of computer network
- focus on the structure and behavior of network
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;details&#34;&gt;Details
&lt;/h3&gt;&lt;h5 id=&#34;introduction-简介&#34;&gt;Introduction 简介
&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;- the architecture of newtork is based on different protocols.
 
	 =&amp;gt; Protocol: an agreement between the communicating parties on how communication is to proceed.
	
- Network Model of hierarchy =&amp;gt; 5 Layers
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;5-layers&#34;&gt;5 Layers
&lt;/h5&gt;&lt;p&gt;OSI/RM (Open Systems Interconnection Reference Model) 开发系统互连基本参考模型&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;5 Layers&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Function&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Application Layer&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;message&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Transport Layer&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;segment&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Network Layer&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;datagram&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Data Link Layer&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;frame&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Physical Layer&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;bit&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;each layer contains several protocals&lt;/li&gt;
&lt;li&gt;in s sense, each layer offers certain service to the layer above it.&lt;/li&gt;
&lt;li&gt;each layer communicates with the corresponding(相应的) layer, using specific message header to distinguish(区别).&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;application-layer-应用层-http-ftp-usmtpu-dns&#34;&gt;Application Layer 应用层 (HTTP, FTP, &lt;u&gt;&lt;del&gt;SMTP&lt;/del&gt;&lt;/u&gt;, DNS)
&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;* deal with the problems how network applications work and communicate with each other.
* famour protocols:
- HTTP, HyperText Transfer Protocol
 =&amp;gt; defines how the web clients ask for web pages and how the server transfer the web pages to clients.
- kinds of connection
  non-persistent connection 
  persistent connection =&amp;gt; won&#39;t shut down till specific time.

Client 			Server
 |	Start TCP      |
 |----------------&amp;gt;|
 |                 |
 |   Confirm       |
 |&amp;lt;----------------|
 |                 |
 |  ask for files  |
 |----------------&amp;gt;|
 |                 |
 |   get files     |
 |-----------------|
 |-----------------|
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;HTTP Request&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;request line -&amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; GET/HTTP/1.1
 	
              | Host: www.devtao.com
 header line -| connection: close
              | user-agent: Mozilla / 4.0
              |	Accept-language: cn
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HTTP Respond:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;status line -&amp;gt;&lt;/p&gt;
&lt;p&gt;(status code: 200, 404)
header line
entity body&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cookie&lt;/p&gt;
&lt;p&gt;=&amp;gt; a special file to distinguish the clients&lt;/p&gt;
&lt;p&gt;Sam login to Amazon, PC send cookie 1000 to server, server will store this cookie in the backend database.
next time Sam login to Amazon, the server will recognise him.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FTP, File Transfer Protocol
=&amp;gt; Users can upload or download files from the FTP server =&amp;gt; in LAN&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;user &amp;lt;&amp;ndash;&amp;gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;FTP Interface&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;FTP Client &amp;lt;&amp;ndash;&amp;gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;FTP Server&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;II&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;II&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;local file system&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;remote file system&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;对照下图&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; ------        ---------------    ------------        ------------
| user |&amp;lt;--&amp;gt;  | FTP Interface |  | FTP Client |&amp;lt;--&amp;gt;  | FTP Server |
 ------        ---------------    ------------        ------------         
					      ||				                   ||
            -------------------             --------------------
           | local file system |           | remote file system |
            -------------------             --------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SMTP (Simple Main Transfer Protocol)&lt;/p&gt;
&lt;p&gt;=&amp;gt; define how the E-mainl system works.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   -----------      -----------------  SMTP   ---------------
  | A&#39;s agent | -&amp;gt; | A&#39;s mail Server | ----&amp;gt; |B&#39;s mail Server|
   -----------      -----------------         ---------------
  									               ||
  									               ||
  									          -----------
  									         | B&#39;s agent | 												      -----------
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;define the message format&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;=&amp;gt; header&lt;/p&gt;
&lt;p&gt;=&amp;gt; &lt;u&gt;Only ASCII code is legal in SMTP.&lt;/u&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNS (Domain Name Server Protocol)&lt;/p&gt;
&lt;p&gt;=&amp;gt; use DNS to get the internet IP address.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;people prefer to rememter the web address, or say URL rather than the IP address.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;-use DNS to find the corresponding IP address of a specific web URL(Uniform Resource Locator). &lt;a class=&#34;link&#34; href=&#34;https://www.google.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;www.google.com&lt;/a&gt; &amp;lt;=&amp;gt; 8.8.8.8&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using a distributed database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;network&#34;&gt;Network
&lt;/h3&gt;&lt;p&gt;A computer network is a group of interconnected computers.
Networks may be classified(划分) according to a wide kind of
characteristics. The most common division is &amp;ldquo;LAN&amp;rdquo; and &amp;ldquo;WAN&amp;rdquo;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;WAN&amp;rdquo;(Wide Area Network), is connect computer within a very wide Region.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;LAN&amp;rdquo;(Local Area Network), is a Network in l limited region and computers belonging to it, will enter the net when they get switched on.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;network-topologys&#34;&gt;Network-Topologys
&lt;/h3&gt;&lt;p&gt;Network toplogy is the study of the arrangement(排列) or mapping(映射) of the elements of a network, especially the physical and logical interconnections between nodes(结点).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.iostao.com/2016/03/aps-network/network-topologys_total.jpg&#34;
	width=&#34;557&#34;
	height=&#34;342&#34;
	srcset=&#34;https://blog.iostao.com/2016/03/aps-network/network-topologys_total_hu2171168025915276459.jpg 480w, https://blog.iostao.com/2016/03/aps-network/network-topologys_total_hu5903678929949620075.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;拓扑图&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;162&#34;
		data-flex-basis=&#34;390px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Line-Topology&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bus-Topology&lt;/p&gt;
&lt;p&gt;All computers are connected in a line. When a line is broken, the whole network doesn&amp;rsquo;t work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ring-Topology&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s like a Bus or Line Topology and has the same advantages and disadvantages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Star-Topology&lt;/p&gt;
&lt;p&gt;In Star-Topology, all computers are connected to Central-Stations like Hub, Switch or Router. This topology is very quick and  safe and also easy to maintenance.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        <item>
        <title>APS-Start</title>
        <link>https://blog.iostao.com/2016/03/aps-start/</link>
        <pubDate>Sat, 12 Mar 2016 06:37:24 +0000</pubDate>
        
        <guid>https://blog.iostao.com/2016/03/aps-start/</guid>
        <description>&lt;p&gt;毛爷爷说过，不能打无准备的仗。&lt;/p&gt;
&lt;p&gt;复习时，可按照下面的方针进行知识点的整理：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1、必修类课程每门课提炼3-4个知识点，4个最优
2、选修课课程每门课提炼2-3个知识点，3个最优
3、其他课程一句话，讲清楚学了啥干了啥就行
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;课程复习&#34;&gt;课程复习
&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;C语言 (数组、结构、指针)
编程语言 （语言分类[机器，汇编，高级], 共同点，不同点，OOP, 流程图）
数据结构 （顺序表、链表、队列和栈、树、图）
数字逻辑 （逻辑门、卡诺图）
数据库原理 （三层模式模型、关系数据库、E-R图、范式）（事务原子最好也看一下）
计算机网络 （网络分层模型、DNS、TCP三次握手、UDP） 
计算机组成原理 （CPU内部结构、存储分层结构、寻址）
计算机操作系统 （进程状态图，死锁及其解决方法，虚拟存储器）
计算机系统结构 （流水线结构、实现、可能出现的问题以及解决方法）
编译原理 （词法分析、语法分析、语义分析）
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;自我介绍&#34;&gt;自我介绍
&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;自我介绍方面，在准备时一定要包括下面几个方面，尽量精简（否则据说红灭这种审核官可能会很不耐烦）
1、姓名
2、年龄+年纪
3、来自哪所院校
4、专业
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;留学计划&#34;&gt;留学计划
&lt;/h4&gt;&lt;p&gt;留学计划这也是一个多半会被问到的问题，一定要事先想清楚大概的计划，比如城市、学校、每个月生活费等等
（英审的注意。 Notice: 你为什么不用德语来面试？ （红灭可能问到的蛋疼的问题))&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
